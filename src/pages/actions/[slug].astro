---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const actions = await getCollection('actions');
  return actions.map(action => ({
    params: { slug: action.slug },
    props: { action },
  }));
}

const { action } = Astro.props;
const { Content } = await action.render();

// Calculate event status
const today = new Date();
today.setHours(0, 0, 0, 0);
const eventDay = new Date(action.data.eventDate);
eventDay.setHours(0, 0, 0, 0);

let status: 'past' | 'today' | 'upcoming' = 'upcoming';
if (eventDay < today) {
  status = 'past';
} else if (eventDay.getTime() === today.getTime()) {
  status = 'today';
}

// Format date
const dateFormatter = new Intl.DateTimeFormat('en-US', {
  weekday: 'long',
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
---

<Layout title={`${action.data.title} - Open Tech International`}>
  <article>
    <!-- Hero Section -->
    <div class="relative h-[30vh]">
      <img
        src={action.data.image}
        alt={action.data.title}
        class="w-full h-full object-cover"
      />
      <div class="absolute inset-0 bg-blue-900/40"></div>
      <div class="absolute inset-0 flex items-center justify-center">
        <div class="text-center text-white px-4">
          <h1 class="text-3xl md:text-4xl font-bold mb-2">{action.data.title}</h1>
          <p class="text-lg">{action.data.description}</p>
        </div>
      </div>
    </div>

    <!-- Content Section -->
    <div class="container mx-auto px-4 mt-16">
      <div class="max-w-4xl mx-auto">
        <!-- Event Details -->
        <div class="bg-white rounded-lg shadow-sm p-6 mb-8">
          <div class="grid md:grid-cols-2 gap-6">
            <div>
              <h2 class="text-xl font-semibold text-gray-900 mb-4">Event Details</h2>
              <div class="space-y-4">
                <div class="flex items-center gap-2 text-gray-600">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                  <span>{dateFormatter.format(action.data.eventDate)}</span>
                </div>
                <div class="flex items-center gap-2 text-gray-600">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  <span>{action.data.location}</span>
                </div>
                <div class="flex items-center gap-2 text-gray-600">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span>{action.data.type}</span>
                </div>
                {action.data.virtual && (
                  <div class="flex items-center gap-2 text-gray-600">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                    </svg>
                    <span>Virtual Event</span>
                  </div>
                )}
              </div>
            </div>
            <div>
              <h2 class="text-xl font-semibold text-gray-900 mb-4">Registration</h2>
              {action.data.registrationUrl && status !== 'past' ? (
                <a
                  href={action.data.registrationUrl}
                  class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
                >
                  {status === 'today' ? 'Join Now' : 'Register'}
                  <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                  </svg>
                </a>
              ) : (
                <p class="text-gray-600">Registration is not available for this event.</p>
              )}
            </div>
          </div>
        </div>

        <!-- Main Content -->
        <div class="prose prose-lg">
          <Content />
        </div>
      </div>
    </div>
  </article>
</Layout> 